# 🔗 URL Shortener – Flask Web App

This is a simple web-based URL Shortener built using **Flask** and **SQLite** as part of the **Cybersecurity 2-Month Internship Program (Week 2 - Malware IOC APT28 Assignment)**.

The app allows users to shorten long URLs (like Bit.ly or TinyURL), store them in a local database, and redirect users when the shortened link is accessed.

## 🚀 Features

- 🔸 Input long URL via a web form
- 🔸 Generates a unique short code (6-character)
- 🔸 Stores mappings in `urls.db` (SQLite)
- 🔸 Automatically redirects short links to original URLs
- 🔸 Auto-creates database on first run (no need to upload `urls.db` to GitHub)

## 🗂️ Project Structure

URL Shortner/ ├── app.py                  
# Main Flask backend ├── templates/   
                     └── index.html         
  # Frontend UI form ├── .gitignore              
  # autogenerate urls.db └── README.md               
  # Project instructions

  ## ⚙️ How to Run in Termux

### 📦 Step 1: Install dependencies

```bash
pkg update && pkg upgrade
pkg install python git
pip install flask

📥 Step 2: Test it in termux
```bash
nano app.py # create and paste the python script
mkdir templates # create folder
nano templates/index.html # create and paste html script


🧠 Step 3: Run the App
pkg update 
pkg python git
git clone https://github.com/Prathameshkamble195350/Cybersecurity-2-month-Internship-Program-2025.git
pip install flask
cd "Cybersecurity-2-month-Internship-Program-2025/Cybersecurity-Internship-Program-2025/Week-2_Malware-IOC-APT28/Assignment/URL Shortner"
python app.py
Visit in your mobile browser:
http://127.0.0.1:5000/
paste the url for short 
press the shorten 
click new shorten url


📦 Auto-Database Creation
urls.db is not stored in the repo
It is auto-generated on first run using the init_db() function in app.py


📄 Example Shortened Output
Input: https://example.com/long-url-here
Output: http://127.0.0.1:5000/abc123
Clicking the short link will redirect to the original URL.


🧾 .gitignore
Make sure urls.db is excluded:
urls.db
